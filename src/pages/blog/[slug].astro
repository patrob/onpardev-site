---
import Layout from '../../layouts/Layout.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({ params: { slug: post.slug } }));
}

const { slug } = Astro.params;
const post = (await getCollection('blog')).find(post => post.slug === slug);
if (!post) {
  throw new Error(`Post not found: ${slug}`);
}
const { Content } = await post.render();
const formatDate = (dateStr) => new Date(dateStr).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
---

<Layout title={post.data.title}>
  <div class="post-section">
    <article class="container post">
      <h1>{post.data.title}</h1>
      <p class="post-date">{formatDate(post.data.date)}</p>
      <Content />
    </article>
  </div>
  <Footer />
</Layout>

<style>
.post-section {
  padding: 160px 0 var(--space-24);
  min-height: calc(100vh - 400px);
  background-color: white;
}

.post {
  background: white;
  padding: var(--space-10);
  border-radius: 12px;
  border: 1px solid var(--base-200);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.04);
  max-width: 800px;
  margin: 0 auto;
}

.post h1 {
  margin-top: 0;
  margin-bottom: var(--space-6);
  font-size: 2.75rem;
}

.post-date {
  color: var(--text-500);
  font-size: 0.875rem;
  font-weight: 500;
  margin-bottom: var(--space-8);
  display: block;
}

.post :global(p) {
  color: var(--text-700);
  line-height: 1.7;
  font-size: 1.0625rem;
}

.post :global(h2) {
  margin-top: var(--space-10);
  margin-bottom: var(--space-4);
  font-size: 2rem;
}

.post :global(h3) {
  margin-top: var(--space-8);
  margin-bottom: var(--space-4);
  font-size: 1.5rem;
}

@media (max-width: 768px) {
  .post-section {
    padding-top: 140px;
  }

  .post h1 {
    font-size: 2.25rem;
  }
}

@media (max-width: 640px) {
  .post-section {
    padding-top: 120px;
  }

  .post {
    padding: var(--space-6);
  }

  .post h1 {
    font-size: 2rem;
  }
}
</style>
