---
interface Props {
  href: string;
  variant?: 'primary' | 'secondary';
  size?: 'default' | 'small';
  class?: string;
}

const { href, variant = 'primary', size = 'default', class: className = '' } = Astro.props;
---

<a href={href} class={`button button-${variant} button-${size} ${className}`}>
  <slot />
</a>

<style>
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-md);
    font-weight: 600;
    font-size: 0.9375rem;
    cursor: pointer;
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
    text-align: center;
    letter-spacing: -0.01em;
    text-decoration: none;
  }

  .button-default {
    padding: 0.875rem 1.75rem;
  }

  .button-small {
    padding: 0.625rem 1.25rem;
    font-size: 0.875rem;
  }

  .button-primary {
    background-color: var(--text-900);
    color: white;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  }

  .button-primary:hover {
    background-color: var(--text-800);
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .button-secondary {
    border: 1.5px solid var(--base-300);
    color: var(--text-700);
    background-color: white;
  }

  .button-secondary:hover {
    background-color: var(--base-50);
    border-color: var(--text-400);
    color: var(--text-900);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }
</style>
